package nerd.utopian.model;

import java.util.Objects;
import java.util.StringJoiner;

public class IngestionRequest {

  private String ingestionCommand;
  private String destination;

  // region Constructor, getters, setters, equals, hashCode, toString -- generated by BoB the Builder of Beans
  // The code below has been generated by BoB the Builder of Beans based on the class' fields.
  // Everything after this comment will be regenerated if you invoke BoB again.
  // If you don't know who BoB is, you can find him here: https://bitbucket.org/atlassianlabs/bob-the-builder-of-beans

  public IngestionRequest(String ingestionCommand, String destination) {
    this.ingestionCommand = Objects.requireNonNull(ingestionCommand);
    this.destination = Objects.requireNonNull(destination);
  }

  // region Getters and setters -- generated by BoB the Builder of Beans
  public String getIngestionCommand() {
    return ingestionCommand;
  }

  public void setIngestionCommand(String ingestionCommand) {
    this.ingestionCommand = Objects.requireNonNull(ingestionCommand);
  }

  public String getDestination() {
    return destination;
  }

  public void setDestination(String destination) {
    this.destination = Objects.requireNonNull(destination);
  }// endregion Getters and setters

  // region hashCode() and equals() -- generated by BoB the Builder of Beans
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }

    IngestionRequest that = (IngestionRequest) o;

    return Objects.equals(this.getIngestionCommand(), that.getIngestionCommand()) && Objects.equals(
        this.getDestination(), that.getDestination());
  }

  @Override
  public int hashCode() {
    return Objects.hash(getIngestionCommand(), getDestination());
  }// endregion hashCode() and equals()

  // region toString() -- generated by BoB the Builder of Beans
  @Override
  public String toString() {
    return new StringJoiner(", ", this.getClass().getSimpleName() + "{", "}")
        .add("ingestionCommand=" + getIngestionCommand())
        .add("destination=" + getDestination())
        .toString();
  }// endregion toString()
  // endregion Constructor, getters, setters, equals, hashCode, toString
}
